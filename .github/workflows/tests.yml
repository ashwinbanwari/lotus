# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Run Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4

    - name: print env
      run: |
        echo $env:PATH

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: >
        cmake
        -G Ninja
        -B build
        -DCMAKE_CXX_FLAGS="-fprofile-instr-generate -fcoverage-mapping"
        .

    - name: Build
      # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      run: cmake --build build

    - name: Run
      working-directory: build
      run: ./lotus.exe -w
      continue-on-error: true

    - name: Create coverage reports
      working-directory: build
      shell: bash
      run: |
        llvm-profdata merge ./default.profraw -o default.profdata
        llvm-cov export --instr-profile=./default.profdata --format=lcov ./lotus.exe > coverage.lcov
      
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        os: "windows"
